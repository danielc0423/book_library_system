# ====================================
# Development Environment Inventory
# Book Library System - Oracle Cloud Infrastructure
# Command 7: Ansible Configuration Management
# ====================================

# Load Balancer Instances
[loadbalancer]
# Auto-populated from Terraform outputs
# Format: hostname ansible_host=public_ip private_ip=private_ip
lb-dev-01 ansible_host=129.213.xxx.xxx private_ip=10.0.1.10

# Web Server Instances (Django Application)
[webservers]
# Auto-populated from Terraform outputs
# Development: 1-2 instances for cost optimization
web-dev-01 ansible_host=129.213.xxx.xxx private_ip=10.0.2.10
web-dev-02 ansible_host=129.213.xxx.xxx private_ip=10.0.2.11

# Database Instances (Oracle Client)
[database]
# Development uses shared Autonomous Database
# These are client connection hosts
db-client-dev-01 ansible_host=129.213.xxx.xxx private_ip=10.0.3.10

# Monitoring and Analytics
[monitoring]
# Shared monitoring for development
monitor-dev-01 ansible_host=129.213.xxx.xxx private_ip=10.0.4.10

# Bastion Hosts for Secure Access
[bastion]
bastion-dev ansible_host=129.213.xxx.xxx private_ip=10.0.1.5

# ====================================
# GROUP DEFINITIONS
# ====================================

# All Application Servers
[application:children]
webservers
database

# All Infrastructure
[infrastructure:children]
loadbalancer
monitoring
bastion

# All Development Environment
[development:children]
application
infrastructure

# Oracle Cloud Instances
[oci_instances:children]
development

# ====================================
# HOST VARIABLES
# ====================================

# Development Environment Global Variables
[development:vars]
# Environment Configuration
environment=development
deployment_stage=dev
environment_color=blue

# Network Configuration
vpc_cidr=10.0.0.0/16
public_subnet_cidr=10.0.1.0/24
private_subnet_cidr=10.0.2.0/24
database_subnet_cidr=10.0.3.0/24

# SSH and Connection Settings
ansible_user=opc
ansible_ssh_private_key_file=~/.ssh/oci_dev_key
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_python_interpreter=/usr/bin/python3

# Oracle Cloud Infrastructure Settings
oci_region=us-ashburn-1
oci_availability_domain=Uocm:US-ASHBURN-AD-1
oci_compartment_id=ocid1.compartment.oc1..development

# Application Configuration
app_name=library-system
app_version=latest
django_settings_module=library_system.settings.development
debug_mode=true
log_level=DEBUG

# Database Configuration
database_type=oracle
db_host=library-dev-db.xxxxxx.oraclecloud.com
db_port=1522
db_service_name=library_dev_high
db_user=LIBRARY_DEV
connection_pool_size=5
connection_pool_max=10

# Load Balancer Configuration
lb_algorithm=round_robin
health_check_interval=30
health_check_timeout=5
ssl_certificate_type=self_signed

# Security Configuration
enable_firewall=true
fail2ban_enabled=true
ssh_port=22
allowed_ssh_users=['opc', 'ansible']
disable_root_login=true

# Monitoring Configuration
monitoring_enabled=true
log_retention_days=7
metrics_retention_days=7
alerting_enabled=false
prometheus_port=9090
grafana_port=3000

# Performance Configuration
gunicorn_workers=2
gunicorn_max_requests=1000
nginx_worker_processes=auto
nginx_worker_connections=1024

# Development Specific Settings
enable_debug_toolbar=true
allow_password_reset=true
session_timeout=3600
cors_allow_all=true
static_file_serving=nginx

# Backup Configuration
backup_enabled=false
backup_retention_days=3
backup_schedule="0 2 * * *"

# Integration Settings
oic_enabled=false
analytics_enabled=false
notification_service_enabled=false

# Resource Limits (Development)
max_memory_mb=4096
max_cpu_cores=2
disk_size_gb=50

# Cost Optimization
auto_shutdown_enabled=true
auto_shutdown_time="20:00"
auto_startup_time="08:00"
weekend_shutdown=true

# ====================================
# SPECIFIC HOST CONFIGURATIONS
# ====================================

[loadbalancer:vars]
nginx_config_type=loadbalancer
backend_servers=['10.0.2.10:8000', '10.0.2.11:8000']
ssl_redirect=false
enable_caching=false

[webservers:vars]
django_app=true
celery_enabled=true
redis_enabled=true
gunicorn_bind=0.0.0.0:8000
static_root=/var/www/library-system/static
media_root=/var/www/library-system/media

[database:vars]
oracle_client_version=19.0.0
tnsnames_entries=['LIBRARY_DEV_HIGH', 'LIBRARY_DEV_MEDIUM', 'LIBRARY_DEV_LOW']
connection_pooling=true
sql_plus_enabled=true

[monitoring:vars]
prometheus_enabled=true
grafana_enabled=true
alertmanager_enabled=false
log_aggregation=local
retention_policy=development

[bastion:vars]
ssh_port=22
allowed_users=['opc', 'ansible', 'admin']
fail2ban_enabled=true
audit_logging=true
session_recording=false

# ====================================
# TERRAFORM INTEGRATION VARIABLES
# ====================================

# These variables are populated by Terraform outputs
# See: infrastructure/outputs.tf for source definitions

[all:vars]
# Terraform State Integration
terraform_workspace=development
terraform_state_bucket=library-system-terraform-state-dev
terraform_output_file=/tmp/terraform_outputs_dev.json

# Oracle Cloud Infrastructure IDs
load_balancer_id="{{ terraform_outputs.load_balancer_id }}"
instance_pool_id="{{ terraform_outputs.instance_pool_id }}"
vcn_id="{{ terraform_outputs.vcn_id }}"
security_group_ids="{{ terraform_outputs.security_group_ids }}"

# Database Connection Details
autonomous_db_connection_string="{{ terraform_outputs.autonomous_db_connection_string }}"
database_wallet_location=/opt/oracle/wallet
database_admin_password="{{ vault_db_admin_password }}"

# SSL Certificate Information
ssl_certificate_ocid="{{ terraform_outputs.ssl_certificate_ocid }}"
ssl_private_key_path=/etc/ssl/private/library-system.key
ssl_certificate_path=/etc/ssl/certs/library-system.crt

# Object Storage Configuration
object_storage_namespace="{{ terraform_outputs.object_storage_namespace }}"
static_files_bucket="{{ terraform_outputs.static_files_bucket }}"
backup_bucket="{{ terraform_outputs.backup_bucket }}"

# Monitoring and Logging
log_analytics_workspace="{{ terraform_outputs.log_analytics_workspace }}"
monitoring_topic_ocid="{{ terraform_outputs.monitoring_topic_ocid }}"

# Security Configuration
vault_ocid="{{ terraform_outputs.vault_ocid }}"
kms_key_ocid="{{ terraform_outputs.kms_key_ocid }}"

# ====================================
# DYNAMIC INVENTORY INTEGRATION
# ====================================

# Oracle Cloud Inventory Plugin Configuration
# This section enables automatic host discovery from OCI
plugin: oracle.oci.oci
regions:
  - us-ashburn-1
compartments:
  - "{{ oci_compartment_id }}"
hostnames:
  - display_name
  - private_ip
compose:
  ansible_host: public_ip | default(private_ip)
  environment: "'development'"
  instance_type: shape
  availability_domain: availability_domain
filters:
  - lifecycle_state == "RUNNING"
  - "freeform_tags.Environment == 'development'"
  - "freeform_tags.Project == 'library-system'"
keyed_groups:
  - key: freeform_tags.Role
    prefix: role
  - key: shape
    prefix: shape
  - key: availability_domain
    prefix: ad
groups:
  webservers: "'django' in (freeform_tags.get('Application', []))"
  database: "'oracle-client' in (freeform_tags.get('Application', []))"
  monitoring: "'monitoring' in (freeform_tags.get('Application', []))"

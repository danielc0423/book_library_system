# ====================================
# Nginx Application Configuration Template
# Django Application Web Server
# Command 7: Ansible Configuration Management
# ====================================

server {
    listen {{ nginx_port }};
    listen [::]:{{ nginx_port }};
    server_name {{ ansible_hostname }} {{ ansible_fqdn | default('localhost') }};
    
    {% if ssl_enabled %}
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen {{ nginx_ssl_port }} ssl http2;
    listen [::]:{{ nginx_ssl_port }} ssl http2;
    server_name {{ ansible_hostname }} {{ ansible_fqdn | default('localhost') }};
    
    # SSL Configuration
    ssl_certificate {{ ssl_certificate_path }};
    ssl_certificate_key {{ ssl_private_key_path }};
    ssl_dhparam {{ ssl_dhparam_path }};
    
    ssl_protocols {{ ssl_protocols }};
    ssl_ciphers {{ ssl_ciphers }};
    ssl_prefer_server_ciphers {{ ssl_prefer_server_ciphers }};
    ssl_session_cache {{ ssl_session_cache }};
    ssl_session_timeout {{ ssl_session_timeout }};
    ssl_session_tickets {{ ssl_session_tickets }};
    
    {% if ssl_stapling %}
    ssl_stapling {{ ssl_stapling }};
    ssl_stapling_verify {{ ssl_stapling_verify }};
    {% endif %}
    {% endif %}
    
    # Security Headers
    add_header X-Frame-Options "{{ security_headers.x_frame_options }}" always;
    add_header X-Content-Type-Options "{{ security_headers.x_content_type_options }}" always;
    add_header X-XSS-Protection "{{ security_headers.x_xss_protection }}" always;
    add_header Referrer-Policy "{{ security_headers.referrer_policy }}" always;
    add_header Content-Security-Policy "{{ security_headers.content_security_policy }}" always;
    {% if ssl_enabled %}
    add_header Strict-Transport-Security "{{ security_headers.strict_transport_security }}" always;
    {% endif %}
    add_header Permissions-Policy "{{ security_headers.permissions_policy }}" always;
    
    # Root and Index
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Logging
    access_log /var/log/nginx/{{ app_name }}-access.log detailed;
    error_log /var/log/nginx/{{ app_name }}-error.log;
    
    # Rate Limiting
    {% if rate_limit_enabled %}
    limit_req zone=general burst=20 nodelay;
    {% endif %}
    
    # Maintenance Mode
    {% if maintenance_mode.enabled %}
    if ($maintenance = 1) {
        return 503;
    }
    
    error_page 503 @maintenance;
    location @maintenance {
        root /usr/share/nginx/html;
        try_files /maintenance.html =503;
        internal;
    }
    {% endif %}
    
    # Django Application
    location / {
        # Rate limiting for general requests
        {% if rate_limit_enabled %}
        limit_req zone=general burst=50 nodelay;
        {% endif %}
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Proxy timeouts
        proxy_connect_timeout {{ proxy_connect_timeout }};
        proxy_send_timeout {{ proxy_send_timeout }};
        proxy_read_timeout {{ proxy_read_timeout }};
        
        # Proxy buffering
        proxy_buffering on;
        proxy_buffer_size {{ proxy_buffer_size }};
        proxy_buffers {{ proxy_buffers }};
        proxy_busy_buffers_size {{ proxy_busy_buffers_size }};
        
        # Proxy cache
        {% if proxy_cache_enabled %}
        proxy_cache app_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
        {% endif %}
    }
    
    # API Endpoints with special rate limiting
    location /api/ {
        {% if rate_limit_enabled %}
        limit_req zone=api burst=100 nodelay;
        {% endif %}
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API specific headers
        add_header X-API-Version "1.0" always;
        add_header X-Rate-Limit-Remaining $limit_req_status always;
        
        # Disable caching for API responses
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Authentication endpoints with strict rate limiting
    location /api/v1/auth/ {
        {% if rate_limit_enabled %}
        limit_req zone=login burst=5 nodelay;
        {% endif %}
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Security headers for auth endpoints
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # Static Files
    location {{ static_files_location }} {
        alias {{ static_files_root }};
        expires {{ static_files_expires }};
        add_header Cache-Control "public, immutable";
        add_header X-Static-File "true";
        
        # Security for static files
        location ~* \.(php|jsp|asp|aspx|cgi|sh|py|pl|lua)$ {
            deny all;
        }
        
        # Optimize static file delivery
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        tcp_nodelay on;
        
        # CORS for static assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control";
        
        # Handle missing static files
        try_files $uri =404;
    }
    
    # Media Files
    location {{ media_files_location }} {
        alias {{ media_files_root }};
        expires {{ media_files_expires }};
        add_header Cache-Control "public";
        
        # Security for media files
        location ~* \.(php|jsp|asp|aspx|cgi|sh|py|pl|lua)$ {
            deny all;
        }
        
        # Handle missing media files
        try_files $uri =404;
    }
    
    # Django Admin (extra security)
    location /admin/ {
        {% if rate_limit_enabled %}
        limit_req zone=login burst=3 nodelay;
        {% endif %}
        
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced security for admin
        add_header X-Frame-Options "DENY" always;
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
        
        # IP whitelist for admin (if configured)
        {% if admin_allowed_ips is defined %}
        {% for ip in admin_allowed_ips %}
        allow {{ ip }};
        {% endfor %}
        deny all;
        {% endif %}
    }
    
    # Health Check Endpoint
    location /health/ {
        access_log off;
        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        
        # Health check specific settings
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        add_header Cache-Control "no-cache" always;
    }
    
    # Nginx Status (for monitoring)
    {% if monitoring_enabled %}
    location {{ status_location }} {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        {% if monitoring_allowed_ips is defined %}
        {% for ip in monitoring_allowed_ips %}
        allow {{ ip }};
        {% endfor %}
        {% endif %}
        deny all;
    }
    {% endif %}
    
    # Robots.txt
    location /robots.txt {
        alias /usr/share/nginx/html/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Favicon
    location /favicon.ico {
        alias /usr/share/nginx/html/favicon.ico;
        expires 1d;
        add_header Cache-Control "public";
        log_not_found off;
    }
    
    # Security: Block common exploit attempts
    {% if security_config.block_common_exploits %}
    location ~* \.(php|jsp|asp|aspx|cgi|sh|py|pl|lua)$ {
        deny all;
    }
    
    location ~* /(\.|wp-admin|wp-login|phpmyadmin|adminer|admin|login|xmlrpc) {
        deny all;
    }
    
    location ~* \.(sql|tar|tgz|gz|zip|rar|7z|bak|backup|log|ini|conf)$ {
        deny all;
    }
    {% endif %}
    
    # Method whitelist
    {% if security_config.whitelist_allowed_methods %}
    if ($request_method !~ ^({{ security_config.whitelist_allowed_methods | join('|') }})$) {
        return 405;
    }
    {% endif %}
    
    # Error Pages
    {% for code, page in custom_error_pages.items() %}
    error_page {{ code }} {{ page }};
    {% endfor %}
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /500.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /503.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /504.html {
        root /usr/share/nginx/html;
        internal;
    }
}

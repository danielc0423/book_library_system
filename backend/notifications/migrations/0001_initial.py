# Generated by Django 4.2.21 on 2025-06-03 09:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='notification_preferences', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('email_enabled', models.BooleanField(default=True, help_text='Enable email notifications')),
                ('welcome_email', models.BooleanField(default=True, help_text='Receive welcome email')),
                ('borrow_confirmation', models.BooleanField(default=True, help_text='Receive borrowing confirmation emails')),
                ('return_confirmation', models.BooleanField(default=True, help_text='Receive return confirmation emails')),
                ('pre_due_reminder', models.BooleanField(default=True, help_text='Receive reminders before due date')),
                ('overdue_notice', models.BooleanField(default=True, help_text='Receive overdue notices')),
                ('credit_score_updates', models.BooleanField(default=True, help_text='Receive credit score change notifications')),
                ('newsletter', models.BooleanField(default=False, help_text='Subscribe to library newsletter')),
                ('reminder_days_before', models.PositiveIntegerField(default=3, help_text='Days before due date to send reminder')),
                ('quiet_hours_start', models.TimeField(default='22:00', help_text='Start of quiet hours (no notifications)')),
                ('quiet_hours_end', models.TimeField(default='08:00', help_text='End of quiet hours')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template identifier', max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('borrow_confirmation', 'Borrowing Confirmation'), ('return_confirmation', 'Return Confirmation'), ('pre_due_reminder', 'Pre-Due Date Reminder'), ('overdue_notice', 'Overdue Notice'), ('renewal_confirmation', 'Renewal Confirmation'), ('credit_score_update', 'Credit Score Update'), ('account_suspended', 'Account Suspended'), ('password_reset', 'Password Reset'), ('email_verification', 'Email Verification')], max_length=50, unique=True)),
                ('subject', models.CharField(help_text='Email subject line', max_length=200)),
                ('html_template', models.TextField(help_text='HTML email template with variables')),
                ('text_template', models.TextField(help_text='Plain text email template with variables')),
                ('variables', models.JSONField(blank=True, default=list, help_text='List of available template variables')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is currently in use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'ordering': ['template_type'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('queue_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(help_text='Type of notification to send', max_length=50)),
                ('scheduled_for', models.DateTimeField(db_index=True, help_text='When to send this notification')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('data', models.JSONField(default=dict, help_text='Data for the notification')),
                ('attempts', models.PositiveIntegerField(default=0, help_text='Number of send attempts')),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Maximum send attempts')),
                ('is_processed', models.BooleanField(db_index=True, default=False, help_text='Whether this notification has been processed')),
                ('processed_at', models.DateTimeField(blank=True, help_text='When this notification was processed', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_queue', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Queue',
                'verbose_name_plural': 'Notification Queue',
                'db_table': 'notification_queue',
                'ordering': ['scheduled_for', '-priority'],
                'indexes': [models.Index(fields=['is_processed', 'scheduled_for'], name='notificatio_is_proc_6ba8cd_idx'), models.Index(fields=['user', 'notification_type'], name='notificatio_user_id_061962_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(db_index=True, help_text='Type of notification sent', max_length=50)),
                ('subject', models.CharField(help_text='Email subject', max_length=200)),
                ('recipient_email', models.EmailField(help_text='Recipient email address', max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('bounced', 'Bounced')], db_index=True, default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the notification was sent', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the notification')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_9d8bc4_idx'), models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_e0b12c_idx')],
            },
        ),
    ]

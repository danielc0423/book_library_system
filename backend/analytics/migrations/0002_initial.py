# Generated by Django 4.2.21 on 2025-06-03 09:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('analytics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCreditScore',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='credit_score', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('credit_score', models.DecimalField(decimal_places=2, default=750.0, help_text='Credit score on a 0-1000 scale', max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('on_time_returns', models.PositiveIntegerField(default=0, help_text='Number of books returned on time')),
                ('late_returns', models.PositiveIntegerField(default=0, help_text='Number of books returned late')),
                ('total_books_borrowed', models.PositiveIntegerField(default=0, help_text='Total number of books borrowed')),
                ('average_return_delay', models.DecimalField(decimal_places=2, default=0.0, help_text='Average delay in days for late returns', max_digits=5)),
                ('reliability_rating', models.CharField(choices=[('Excellent', 'Excellent (900-1000)'), ('Very Good', 'Very Good (800-899)'), ('Good', 'Good (700-799)'), ('Fair', 'Fair (600-699)'), ('Poor', 'Poor (500-599)'), ('Very Poor', 'Very Poor (Below 500)')], default='Good', help_text='Overall reliability rating', max_length=20)),
                ('max_books_allowed', models.PositiveIntegerField(default=5, help_text='Maximum books allowed based on credit score')),
                ('external_system_scores', models.JSONField(blank=True, default=dict, help_text='Credit scores from other integrated systems')),
                ('composite_score', models.DecimalField(decimal_places=2, default=750.0, help_text='Weighted score across all integrated systems', max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('system_privileges', models.JSONField(blank=True, default=dict, help_text='Cross-system privileges based on composite score')),
                ('last_cross_sync', models.DateTimeField(blank=True, help_text='Last synchronization across systems', null=True)),
                ('last_calculated', models.DateTimeField(auto_now=True, help_text='Last time the credit score was calculated')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Credit Score',
                'verbose_name_plural': 'User Credit Scores',
                'db_table': 'user_credit_scores',
                'ordering': ['-credit_score'],
            },
        ),
        migrations.AddField(
            model_name='useractivitylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user', 'action'], name='user_activi_user_id_aa2c37_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['timestamp'], name='user_activi_timesta_8378ef_idx'),
        ),
    ]
